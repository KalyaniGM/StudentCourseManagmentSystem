@model StudentCourseManagementSystem.Models.Course
@{
    ViewBag.Title = "AddCourse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend><b>Add Course</b></legend>
        <table>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CourseCode)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.CourseCode)
                        @Html.ValidationMessageFor(model => model.CourseCode)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CourseName)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.CourseName)
                        @Html.ValidationMessageFor(model => model.CourseName)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TeacherName)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.TeacherName)
                        @Html.ValidationMessageFor(model => model.TeacherName)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.StartDate)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.StartDate)
                        @Html.ValidationMessageFor(model => model.StartDate)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EndDate)
                    </div>
                </td>
                <td>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.EndDate)
                        @Html.ValidationMessageFor(model => model.EndDate)
                    </div>
                </td>
            </tr>
        </table>
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Course")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="https://cdn.jsdelivr.net/momentjs/2.12.0/moment.min.js"></script>

<script type="text/javascript">
    $.validator.unobtrusive.adapters.add('restrictbackdates', ['mindate'], function (options) {
        options.rules['restrictbackdates'] = { mindate: options.params.mindate };
        options.messages['restrictbackdates'] = options.message;
    });

    $.validator.addMethod("restrictbackdates", function (value, element, param) {
        var date = new Date(value);
        var minDate = new Date(param.mindate);
        return date >= minDate;
    });

    $.validator.unobtrusive.adapters.add('isgreater', ['otherproperty'], function (options) {
        options.rules['isgreater'] = { otherproperty: options.params.otherproperty };
        options.messages['isgreater'] = options.message;
    });

    $.validator.addMethod("isgreater", function (value, element, param) {
        var otherProp = $('#' + param.otherproperty);
        if (otherProp.val() != '') {
            var StartDate = new Date(moment(otherProp.val(), 'MM/DD/YYYY'));

            var Enddate = new Date(value);
            if (StartDate != '') {
                return Enddate >= StartDate;
            }
        }
        return true;
    });
</script>

}*@